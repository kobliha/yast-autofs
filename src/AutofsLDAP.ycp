/**
 * File:
 *   AutoFS.ycp
 *
 * Module:
 *   Configuration of autofs maps.
 *
 * Summary:
 *   AutoFS extension for Network NFS routines.
 *
 * Authors:
 *   Peter Varkoly  <varkoly@suse.de>
 *
 * $Id: routines.ycp 33404 2006-10-13 13:01:27Z mvidner $
 *
 * AutoFS
 *
 */

{
    textdomain "autofs";
    import     "Ldap";
    map        LDAPSettings;
    map        MAPBases;
    string     AUTOFSBase;
    string     AutoMasterBase;
    string     LDAPServer;
    boolean    LDAPUsed;
    map        AUTOFSMaps;

    global define boolean CheckLDAP ()
    {
       Ldap::Read();
       LDAPSettings = Ldap::Export();
       if(LDAPSettings["base_config_dn"]:"" == "" )
       {
         return false;
       }
       Ldap::LDAPInit();
       AUTOFSBase     = "ou=AUTOFS,"+LDAPSettings["ldap_domain"]:"";
       AutoMasterBase = "nisMapName=auto.master,"+AUTOFSBase;
       LDAPServer = LDAPSettings["ldap_server"]:"";
       if( LDAPServer == "localhost" || LDAPServer == "127.0.0.1" )
       {
         LDAPServer = nil;
       }
       return true;
    }

    global define string CreateAutoFSBase ()
    {
      SCR::Write(".ldap.add", $["dn" : AUTOFSBase ] ,
			      $[
				"objectClass": [ "organizationalUnit"],
				"ou": "AUTOFS"
			      ]
		);
      SCR::Write(".ldap.add", $["dn" : AutoMasterBase ],
			      $[
				"objectClass": [ "nismap"],
				"nisMapName": "auto.master"
			      ]
		);
		return "";
    }
    global define string AddMap ( string name )
    {
      SCR::Write(".ldap.add", $["dn" : "cn=/" + name + "," AutoMasterBase ],
			      $[
				"objectClass" : [ "nisObject"],
				"nisMapName"  : "auto.master",
				"cn"          : "/"+name,
				"nisMapEntry" : "ldap "+LDAPServer+":nisMapName=auto."+name+","+AUTOFSBase
			       ]
		);
      SCR::Write(".ldap.add", $["dn" : "nisMapName=auto."+name+","+AUTOFSBase ],
			      $[
				"objectClass": [ "nismap"],
				"nisMapName": "auto."+name
			      ]
		);
		return "";
    }
    global define string AddEntry ( string mapname, string cn, string entry )
    {
    }

    global define any ReadMaps ()
    {
	list all = (map)SCR::Read (.ldap.search, $[
			"base_dn"      : AUTOFSBase,
			"filter"       : "(!(nisMapName=auto.master))",
			"scope"        : 1,
			"not_found_ok" : true,
			"dn_only"      : true
		    ]
		);
	foreach(string dn,all,
	``{
		list f = regexptokenize(dn,"nisMapName=auto\.(.*),"+AUTOFSBase);
		MAPBases[ f[0]:"" ] = dn;
	});
    }

    global define list ReadEntries ( string name )
    {
        return SCR::Read (.ldap.search, $[
			"base_dn"      : MAPBases[ name ]:"",
			"filter"       : "(objectClass=nismap)",
			"scope"        : 1,
			"not_found_ok" : true
		]
	);
    }
    define any Write ()
    {
	Ldap::LDAPAskAndBind(false);
    }

}
